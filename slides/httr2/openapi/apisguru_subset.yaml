openapi: 3.0.0
servers:
- url: https://api.apis.guru/v2
info:
  contact:
    email: mike.ralphson@gmail.com
    name: APIs.guru
    url: https://APIs.guru
  description: |
    Wikipedia for Web APIs. Repository of API definitions in OpenAPI format.
    **Warning**: If you want to be notified about changes in advance please join our [Slack channel](https://join.slack.com/t/mermade/shared_invite/zt-g78g7xir-MLE_CTCcXCdfJfG3CJe9qA).
    Client sample: [[Demo]](https://apis.guru/simple-ui) [[Repo]](https://github.com/APIs-guru/simple-ui)
  license:
    name: CC0 1.0
    url: https://github.com/APIs-guru/openapi-directory#licenses
  title: APIs.guru
  version: 2.2.0
  x-apisguru-categories:
  - open_data
  - developer_tools
  x-logo:
    url: https://api.apis.guru/v2/cache/logo/https_apis.guru_branding_logo_vertical.svg
  x-origin:
  - format: openapi
    url: https://api.apis.guru/v2/openapi.yaml
    version: '3.0'
  x-providerName: apis.guru
  x-tags:
  - API
  - Catalog
  - Directory
  - REST
  - Swagger
  - OpenAPI
externalDocs:
  url: https://github.com/APIs-guru/openapi-directory/blob/master/API.md
security: []
tags:
- description: Actions relating to APIs in the collection
  name: APIs
paths:
  /list.json:
    get:
      description: |
        List all APIs in the directory.
        Returns links to the OpenAPI definitions for each API in the directory.
        If API exist in multiple versions `preferred` one is explicitly marked.
        Some basic info from the OpenAPI definition is cached inside each object.
        This allows you to generate some simple views without needing to fetch the OpenAPI definition for each API.
      operationId: listAPIs
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIs'
          description: OK
      summary: List all APIs
      tags: APIs
  /metrics.json:
    get:
      description: |
        Some basic metrics for the entire directory.
        Just stunning numbers to put on a front page and are intended purely for WoW effect :)
      operationId: getMetrics
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metrics'
          description: OK
      summary: Get basic metrics
      tags: APIs
  /providers.json:
    get:
      description: |
        List all the providers in the directory
      operationId: getProviders
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      minLength: 1
                      type: string
                    minItems: 1
                    type: array
                type: object
          description: OK
      summary: List all providers
      tags: APIs
  /specs/{provider}/{api}.json:
    get:
      description: Returns the API entry for one specific version of an API where
        there is no serviceName.
      operationId: getAPI
      parameters:
      - $ref: '#/components/parameters/provider'
      - $ref: '#/components/parameters/api'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API'
          description: OK
      summary: Retrieve one version of a particular API
      tags: APIs
  /specs/{provider}/{service}/{api}.json:
    get:
      description: Returns the API entry for one specific version of an API where
        there is a serviceName.
      operationId: getServiceAPI
      parameters:
      - $ref: '#/components/parameters/provider'
      - in: path
        name: service
        required: yes
        schema:
          example: graph
          maxLength: 255
          minLength: 1
          type: string
      - $ref: '#/components/parameters/api'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API'
          description: OK
      summary: Retrieve one version of a particular API with a serviceName.
      tags: APIs
  /{provider}.json:
    get:
      description: |
        List all APIs in the directory for a particular providerName
        Returns links to the individual API entry for each API.
      operationId: getProvider
      parameters:
      - $ref: '#/components/parameters/provider'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIs'
          description: OK
      summary: List all APIs for a particular provider
      tags: APIs
  /{provider}/services.json:
    get:
      description: |
        List all serviceNames in the directory for a particular providerName
      operationId: getServices
      parameters:
      - $ref: '#/components/parameters/provider'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      minLength: 0
                      type: string
                    minItems: 1
                    type: array
                type: object
          description: OK
      summary: List all serviceNames for a particular provider
      tags: APIs
components:
  parameters:
    api:
      in: path
      name: api
      required: yes
      schema:
        example: 2.1.0
        maxLength: 255
        minLength: 1
        type: string
    provider:
      in: path
      name: provider
      required: yes
      schema:
        example: apis.guru
        maxLength: 255
        minLength: 1
        type: string
  schemas:
    API:
      additionalProperties: no
      description: Meta information about API
      properties:
        versions:
          additionalProperties:
            $ref: '#/components/schemas/ApiVersion'
          description: List of supported versions of the API
          minProperties: 1
          type: object
      required: versions
      type: object
    APIs:
      additionalProperties:
        $ref: '#/components/schemas/API'
      description: |
        List of API details.
        It is a JSON object with API IDs(`<provider>[:<service>]`) as keys.
      minProperties: 1
      type: object
    ApiVersion:
      additionalProperties: no
      properties:
        added:
          description: Timestamp when the version was added
          format: date-time
          type: string
        link:
          description: Link to the individual API entry for this API
          format: url
          type: string
        openapiVer:
          description: The value of the `openapi` or `swagger` property of the source
            definition
          type: string
        swaggerUrl:
          description: URL to OpenAPI definition in JSON format
          format: url
          type: string
        swaggerYamlUrl:
          description: URL to OpenAPI definition in YAML format
          format: url
          type: string
        updated:
          description: Timestamp when the version was updated
          format: date-time
          type: string
      required:
      - added
      - updated
      - swaggerUrl
      - swaggerYamlUrl
      - openapiVer
      type: object
x-optic-standard: '@febf8ac6-ee67-4565-b45a-5c85a469dca7/Fz6KU3_wMIO5iJ6_VUZ30'
x-optic-url: https://app.useoptic.com/organizations/febf8ac6-ee67-4565-b45a-5c85a469dca7/apis/_0fKWqUvhs9ssYNkq1k-c
